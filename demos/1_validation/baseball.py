""""
baseball.py

Uses historical baseball data to geocode and map birthplace information for
baseballs from 1871 through 2018

Data is available through SeanLahman.com

"""

import arcpy
import pandas as pd
import os


def get_subset_by_year(people_csv, appearances_csv, year1, year2=None):
    """
    Use pandas to subset the data for only the years of interest

    :param people_csv: A .csv containing player information
    :param appearances_csv:  A .csv containing appearances by year
    :param year1: A long indicating the first year of the range
    :param year2: A long indicating the last year of the range (optional)
    :return: Merged and subset data for the year(s) of interest
    """

    tmp_csv = os.path.join(arcpy.env.scratchGDB, 'subset.csv')
    if os.path.exists(tmp_csv):
        os.remove(tmp_csv)
    
    people = pd.read_csv(people_csv)
    appearances = pd.read_csv(appearances_csv)
    
    merged = pd.merge(appearances, people, on='playerID')

    # If multiple years, perform 'isin'
    if not year2:
        subset = merged.loc[merged['yearID'] == year1]
    else:
        year_range = list(range(year1, year2 + 1))
        subset = merged.loc[merged['yearID'].isin(year_range)]
    
    subset.to_csv(tmp_csv)
    
    return tmp_csv
    

def create_output(temp_file, output_fc):
    """
    Geocode and perform Hot Spot Analysis for player birthplace info

    :param temp_file: .csv generated by get_subset_by_year or equivalent
    :param output_fc: An output feature class
    :return: None
    """
    geocode_output = 'in_memory\\bb_geocode'

    arcpy.geocoding.GeocodeAddresses(
        temp_file,
        "https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/Esri World Geocoder", 
        "'Address or Place' <None> VISIBLE NONE;Address2 <None> VISIBLE NONE;Address3 <None> VISIBLE NONE;Neighborhood <None> VISIBLE NONE;City birthCity VISIBLE NONE;County birthCountry VISIBLE NONE;State birthState VISIBLE NONE;ZIP <None> VISIBLE NONE;ZIP4 <None> VISIBLE NONE;Country <None> VISIBLE NONE", 
        geocode_output, "STATIC", None, "ROUTING_LOCATION", None)
    
    arcpy.stats.OptimizedHotSpotAnalysis(
        geocode_output, output_fc, None, 
        "COUNT_INCIDENTS_WITHIN_FISHNET_POLYGONS")


if __name__ == "__main__":
    people_csv = arcpy.GetParameterAsText(0)
    appearances_csv = arcpy.GetParameterAsText(1)
    output_fc = arcpy.GetParameterAsText(2)
    year1 = arcpy.GetParameter(3)
    year2 = arcpy.GetParameter(4)
    
    temp_file = get_subset_by_year(people_csv, appearances_csv, year1, year2)
    create_output(temp_file, output_fc)
